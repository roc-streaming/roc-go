name: build

on:
  repository_dispatch:

  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  schedule:
    - cron: '0 0 * * 1'

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goversion: [ '1.12', '1.x' ]

    name: Ubuntu - Go ${{ matrix.goversion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Update source.list
        run: |
          sudo sed -i 's/azure\.//' /etc/apt/sources.list
          sudo apt-get update

      - name: Install system dependencies
        run: >
          sudo apt-get -y install g++ pkg-config scons ragel gengetopt \
            libuv1-dev libunwind-dev libpulse-dev libsox-dev libcpputest-dev libtool \
            intltool autoconf automake make cmake

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}

      - name: Build Roc
        run: |
          git clone https://github.com/roc-streaming/roc-toolkit.git /tmp/roc
          scons -C /tmp/roc -Q --build-3rdparty=openfec
          sudo scons -C /tmp/roc -Q --build-3rdparty=openfec install

      - name: Build bindings
        run: |
          cd roc
          go get -v .

      - name: Run tests
        run: |
          cd roc
          go test -covermode=count -coverprofile=coverage.out

      - name: Run tests under race detector
        run: |
          cd roc
          go test -race

      - name: Run linters
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.28
          working-directory: roc

      - name: Prepare coverage report
        uses: jandelgado/gcov2lcov-action@v1.0.5
        with:
          workspace: roc

      - name: Send coverage report
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: roc/coverage.lcov
          base-path: roc

  macos:
    runs-on: macos-latest

    name: macOS
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: brew install scons ragel gengetopt libuv speexdsp sox cpputest

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'

      - name: Build Roc
        run: |
          git clone https://github.com/roc-streaming/roc-toolkit.git /tmp/roc
          scons -C /tmp/roc -Q --build-3rdparty=openfec
          sudo scons -C /tmp/roc -Q --build-3rdparty=openfec install

      - name: Build bindings
        run: |
          cd roc
          go get -v .

      - name: Run tests
        run: |
          cd roc
          go test

      - name: Run tests under race detector
        run: |
          cd roc
          go test -race
