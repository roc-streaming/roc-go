name: build

on:
  workflow_dispatch:
  repository_dispatch:

  pull_request:
    branches:
      - master
      - v*

  push:
    branches:
      - master
      - v*
    tags:
      - v*

  schedule:
    - cron: '0 0 * * 1'

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: Linux - Go 1.12
            go: 1.12
            build: yes
            test: yes
            lint: no
            coverage: no

          - name: Linux - Go 1.x
            go: 1.x
            build: yes
            test: yes
            lint: no
            coverage: no

          - name: Linters
            go: 1.x
            build: no
            test: no
            lint: yes
            coverage: no

          - name: Coverage
            go: 1.x
            build: yes
            test: yes
            lint: no
            coverage: yes

    name: ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: >
          sudo apt-get -y install g++ pkg-config scons ragel gengetopt \
            libuv1-dev libunwind-dev libpulse-dev libsox-dev libcpputest-dev libtool \
            intltool autoconf automake make cmake

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Build Roc
        run: |
          git clone https://github.com/roc-streaming/roc-toolkit.git /tmp/roc
          scons -C /tmp/roc -Q --build-3rdparty=openfec
          sudo scons -C /tmp/roc -Q --build-3rdparty=openfec install

      - name: Build bindings
        if: ${{ matrix.build == 'yes' }}
        run: |
          cd roc
          go get -v .

      - name: Run tests
        if: ${{ matrix.test == 'yes' }}
        run: |
          cd roc
          go test -covermode=count -coverprofile=coverage.out

      - name: Run tests under race detector
        if: ${{ matrix.test == 'yes' }}
        run: |
          cd roc
          go test -race

      - name: Run linters
        if: ${{ matrix.lint == 'yes' }}
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
          working-directory: roc

      - name: Prepare coverage report
        if: ${{ matrix.coverage == 'yes' }}
        uses: jandelgado/gcov2lcov-action@v1.0.9
        with:
          working-directory: roc

      - name: Send coverage report
        if: ${{ matrix.coverage == 'yes' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: roc/coverage.lcov

  macos:
    runs-on: macos-latest

    name: macOS
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: brew install scons ragel gengetopt libuv speexdsp sox cpputest

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.x'

      - name: Build Roc
        run: |
          git clone https://github.com/roc-streaming/roc-toolkit.git /tmp/roc
          scons -C /tmp/roc -Q --build-3rdparty=openfec
          sudo scons -C /tmp/roc -Q --build-3rdparty=openfec install

      - name: Build bindings
        run: |
          cd roc
          go get -v .

      - name: Run tests
        run: |
          cd roc
          go test

      - name: Run tests under race detector
        run: |
          cd roc
          go test -race
