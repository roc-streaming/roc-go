// Code generated by generate_bindings.py script from roc-streaming/bindgen
// roc-toolkit git tag: v0.4.0, commit: 62401be9

package roc

// Clock source for sender or receiver.
//
// Defines wo is responsible to invoke read or write in proper time.
//
//go:generate stringer -type ClockSource -trimprefix ClockSource -output clock_source_string.go
type ClockSource int

const (
	// Default clock source.
	//
	// Current default is ClockSourceExternal.
	ClockSourceDefault ClockSource = 0

	// Sender or receiver is clocked by external user-defined clock.
	//
	// Write and read operations are non-blocking. The user is responsible to call
	// them in time, according to the external clock.
	//
	// Use when samples source (from where you read them to pass to receiver) or
	// destination (to where you write them after obtaining from sender) is active
	// and has its own clock, e.g. it is a sound card.
	ClockSourceExternal ClockSource = 1

	// Sender or receiver is clocked by an internal pipeline clock.
	//
	// Write and read operations are blocking. They automatically wait until it's
	// time to process the next bunch of samples according to the configured sample
	// rate, based on a CPU timer.
	//
	// Use when samples source (from where you read them to pass to receiver) or
	// destination (to where you write them after obtaining from sender) is passive
	// and does now have clock, e.g. it is a file on disk.
	ClockSourceInternal ClockSource = 2
)
