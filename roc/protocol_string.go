// Code generated by "stringer -type Protocol -trimprefix Proto -output protocol_string.go"; DO NOT EDIT.

package roc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ProtoRtsp-10]
	_ = x[ProtoRtp-20]
	_ = x[ProtoRtpRs8mSource-30]
	_ = x[ProtoRs8mRepair-31]
	_ = x[ProtoRtpLdpcSource-32]
	_ = x[ProtoLdpcRepair-33]
	_ = x[ProtoRtcp-70]
}

const (
	_Protocol_name_0 = "Rtsp"
	_Protocol_name_1 = "Rtp"
	_Protocol_name_2 = "RtpRs8mSourceRs8mRepairRtpLdpcSourceLdpcRepair"
	_Protocol_name_3 = "Rtcp"
)

var (
	_Protocol_index_2 = [...]uint8{0, 13, 23, 36, 46}
)

func (i Protocol) String() string {
	switch {
	case i == 10:
		return _Protocol_name_0
	case i == 20:
		return _Protocol_name_1
	case 30 <= i && i <= 33:
		i -= 30
		return _Protocol_name_2[_Protocol_index_2[i]:_Protocol_index_2[i+1]]
	case i == 70:
		return _Protocol_name_3
	default:
		return "Protocol(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
